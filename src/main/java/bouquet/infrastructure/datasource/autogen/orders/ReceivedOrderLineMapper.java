package bouquet.infrastructure.datasource.autogen.orders;

import bouquet.domain.model.autogen.orders.ReceivedOrderLine;
import org.apache.ibatis.annotations.*;

public interface ReceivedOrderLineMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders.received_order_line
     *
     * @mbg.generated
     */
    @Delete({
            "delete from orders.received_order_line",
            "where order_number = #{orderNumber,jdbcType=INTEGER}",
            "and order_line_number = #{orderLineNumber,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(@Param("orderNumber") Integer orderNumber, @Param("orderLineNumber") Integer orderLineNumber);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders.received_order_line
     *
     * @mbg.generated
     */
    @Insert({
            "insert into orders.received_order_line (order_number, order_line_number, ",
            "product_number, product_name, ",
            "sales_price, order_line_delivery_date, ",
            "order_line_quantity, order_line_tax, ",
            "order_line_discount, reserve_quantity, ",
            "shipping_instructing_quantity, shipping_quantity, ",
            "complete, created_by, ",
            "created_at)",
            "values (#{orderNumber,jdbcType=INTEGER}, #{orderLineNumber,jdbcType=INTEGER}, ",
            "#{productNumber,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, ",
            "#{salesPrice,jdbcType=NUMERIC}, #{orderLineDeliveryDate,jdbcType=DATE}, ",
            "#{orderLineQuantity,jdbcType=INTEGER}, #{orderLineTax,jdbcType=NUMERIC}, ",
            "#{orderLineDiscount,jdbcType=NUMERIC}, #{reserveQuantity,jdbcType=INTEGER}, ",
            "#{shippingInstructingQuantity,jdbcType=INTEGER}, #{shippingQuantity,jdbcType=INTEGER}, ",
            "#{complete,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, ",
            "#{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(ReceivedOrderLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders.received_order_line
     *
     * @mbg.generated
     */
    int insertSelective(ReceivedOrderLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders.received_order_line
     *
     * @mbg.generated
     */
    @Select({
            "select",
            "order_number, order_line_number, product_number, product_name, sales_price, ",
            "order_line_delivery_date, order_line_quantity, order_line_tax, order_line_discount, ",
            "reserve_quantity, shipping_instructing_quantity, shipping_quantity, complete, ",
            "created_by, created_at",
            "from orders.received_order_line",
            "where order_number = #{orderNumber,jdbcType=INTEGER}",
            "and order_line_number = #{orderLineNumber,jdbcType=INTEGER}"
    })
    @ResultMap("bouquet.infrastructure.datasource.autogen.orders.ReceivedOrderLineMapper.BaseResultMap")
    ReceivedOrderLine selectByPrimaryKey(@Param("orderNumber") Integer orderNumber, @Param("orderLineNumber") Integer orderLineNumber);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders.received_order_line
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(ReceivedOrderLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders.received_order_line
     *
     * @mbg.generated
     */
    @Update({
            "update orders.received_order_line",
            "set product_number = #{productNumber,jdbcType=INTEGER},",
            "product_name = #{productName,jdbcType=VARCHAR},",
            "sales_price = #{salesPrice,jdbcType=NUMERIC},",
            "order_line_delivery_date = #{orderLineDeliveryDate,jdbcType=DATE},",
            "order_line_quantity = #{orderLineQuantity,jdbcType=INTEGER},",
            "order_line_tax = #{orderLineTax,jdbcType=NUMERIC},",
            "order_line_discount = #{orderLineDiscount,jdbcType=NUMERIC},",
            "reserve_quantity = #{reserveQuantity,jdbcType=INTEGER},",
            "shipping_instructing_quantity = #{shippingInstructingQuantity,jdbcType=INTEGER},",
            "shipping_quantity = #{shippingQuantity,jdbcType=INTEGER},",
            "complete = #{complete,jdbcType=INTEGER},",
            "created_by = #{createdBy,jdbcType=VARCHAR},",
            "created_at = #{createdAt,jdbcType=TIMESTAMP}",
            "where order_number = #{orderNumber,jdbcType=INTEGER}",
            "and order_line_number = #{orderLineNumber,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ReceivedOrderLine record);
}
