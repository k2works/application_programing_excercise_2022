package mrs.infrastructure.datasource.autogen.usr;

import mrs.domain.model.autogen.usr.会員;
import org.apache.ibatis.annotations.*;

public interface 会員Mapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr.会員
     *
     * @mbg.generated
     */
    @Delete({
            "delete from usr.会員",
            "where 会員番号 = #{会員番号,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String 会員番号);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr.会員
     *
     * @mbg.generated
     */
    @Insert({
            "insert into usr.会員 (会員番号, 姓, ",
            "名, パスワード, 役割, ",
            "登録日時)",
            "values (#{会員番号,jdbcType=VARCHAR}, #{姓,jdbcType=VARCHAR}, ",
            "#{名,jdbcType=VARCHAR}, #{パスワード,jdbcType=VARCHAR}, #{役割,jdbcType=VARCHAR}, ",
            "#{登録日時,jdbcType=TIMESTAMP})"
    })
    int insert(会員 record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr.会員
     *
     * @mbg.generated
     */
    int insertSelective(会員 record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr.会員
     *
     * @mbg.generated
     */
    @Select({
            "select",
            "会員番号, 姓, 名, パスワード, 役割, 登録日時",
            "from usr.会員",
            "where 会員番号 = #{会員番号,jdbcType=VARCHAR}"
    })
    @ResultMap("mrs.infrastructure.datasource.autogen.usr.会員Mapper.BaseResultMap")
    会員 selectByPrimaryKey(String 会員番号);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr.会員
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(会員 record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr.会員
     *
     * @mbg.generated
     */
    @Update({
            "update usr.会員",
            "set 姓 = #{姓,jdbcType=VARCHAR},",
            "名 = #{名,jdbcType=VARCHAR},",
            "パスワード = #{パスワード,jdbcType=VARCHAR},",
            "役割 = #{役割,jdbcType=VARCHAR},",
            "登録日時 = #{登録日時,jdbcType=TIMESTAMP}",
            "where 会員番号 = #{会員番号,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(会員 record);
}
