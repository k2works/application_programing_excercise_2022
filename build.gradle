plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'org.dddjava.jig-gradle-plugin' version '2022.6.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2:1.4.200'
    runtimeOnly 'mysql:mysql-connector-java:5.1.47'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly "org.flywaydb:flyway-core:7.5.0"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.github.irof:jig-erd:latest.release'
}

tasks.named('test') {
    useJUnitPlatform()
}

jig {
    linkPrefix = "https://github.com/k2works/application_programing_excercise_2022/tree/take15/src/main/java"
}

[compileJava, processResources]*.shouldRunAfter(clean)
jigReports.dependsOn(clean, classes)

task cleanImage(type: Delete) {
    delete "./docs/images/jig"
    delete "./docs/images/erd"
}

task syncJigImage(type: Sync) {
    from "./build/jig"
    into "./docs/images/jig"
    include "**/*.svg"
}

task syncErdImage(type: Sync) {
    from "./build/erd"
    into "./docs/images/erd"
    include "**/*.svg"
}

task syncImage(type: GradleBuild, dependsOn: ['syncJigImage', 'syncErdImage'], group: 'documentation') {}
task publishDocs(type: GradleBuild, dependsOn: ['clean', 'build', 'cleanImage', 'jigReports', 'syncJigImage', 'syncErdImage'], group: 'documentation') {}
