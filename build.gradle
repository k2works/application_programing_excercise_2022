plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.dddjava.jig-gradle-plugin' version '2022.4.1'
	id 'de.undercouch.download' version '4.0.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly "org.postgresql:postgresql"
	runtimeOnly "org.flywaydb:flyway-core"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.github.irof:jig-erd:latest.release'
}

tasks.named('test') {
	useJUnitPlatform()
}

jig {
	linkPrefix = "https://github.com/k2works/application_programing_excercise_2022/tree/take13/src/main/java"
}

[compileJava, processResources]*.shouldRunAfter(clean)
jigReports.dependsOn(clean, classes)

task cleanImage(type: Delete) {
	delete "./docs/images/jig"
	delete "./docs/images/erd"
}

task syncJigImage(type: Sync) {
	from "./build/jig"
	into "./docs/images/jig"
	include "**/*.svg"
}

task syncErdImage(type: Sync) {
	from "./build/erd"
	into "./docs/images/erd"
	include "**/*.svg"
}

task syncImage(type: GradleBuild, dependsOn: ['syncJigImage', 'syncErdImage'], group: 'documentation') {}
task publishDocs(type: GradleBuild, dependsOn: ['clean', 'build', 'cleanImage', 'jigReports', 'syncJigImage', 'syncErdImage'], group: 'documentation') {}

// SchemaSpy Task
configurations {
	// JDBC ドライバのためのコンフィギュレーション
	jdbc
}

dependencies {
	// JDBC ドライバのライブラリ
	jdbc(
			'org.postgresql:postgresql:42.3.3'
	)
}

tasks.register('schemaSpy', JavaExec) {
	description = 'Generates database documents.'

	group = name

	ext.outputDir = file("${buildDir}/${name}")

	download {
		ext.schemaSpyFile = file("${downloadTaskDir}/${name}/schemaspy.jar")

		src('https://github.com/schemaspy/schemaspy/releases/download/v6.1.0/schemaspy-6.1.0.jar')
		dest(schemaSpyFile)
		overwrite = false
	}

	File driverFile = configurations.jdbc.files.first()

	main = '-jar'
	args = [
			schemaSpyFile,
			'-t', 'pgsql',
			'-dp', driverFile,
			'-host', 'localhost',
			'-port', '5432',
			'-u', 'mrs',
			'-p', 'mrs',
			'-db', 'mrs',
			'-s', 'public',
			'-o', outputDir,
	]

	doFirst {
		outputDir.deleteDir()
	}
}
